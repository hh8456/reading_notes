任务的切换是操作系统提供的,即便是支持多任务的处理器,也不具备切换任务的功能

任务寄存器 TR 中的内容是任务存在的标志，该内容也决定了当前任务是谁
执行 LTR 指令后,处理器用选择子访问 GDT,找到相应的 TSS 描述符,将其 B 位置 1, 表示该任务正在执行中, 同时还要将该描述符传送到 TR 寄存器的描述符高速缓存器中

第一种任务切换的方法是借助于中断,尤其是定时器中断

当中断发生时,处理器用中断号*8,作为索引访问中断描述符表,取出门描述符,其中有中断处理过程的代码段选择子和段内偏移量,接着转移到相应位置去执行
CPU 取出门描述符时,如果发现是任务门描述符,就知道该发生任务切换了

CPU从任务门描述符中取出新任务的 TSS 选择子,用新任务的 TSS 选择子访问 GDT,取出新任务的 TSS
转移到新任务前,CPU 先将当前任务的状态保存起来
当前任务的 TSS 是由任务寄存器 TR 的当前内容指向的,所以CPU要将每个寄存器的快照保存到 TR 指向的 TSS 中
然后,CPU 访问新任务的 TSS,从中恢复各个寄存器的内容,最终,任务处理器 TR 指向新任务 TSS, 开始执行新任务
一旦新任务开始执行, CPU固件会将 TSS 的 B 位置 1, 表示该任务正在执行中

中断发生时,可以执行常规中断处理过程,也可以进行任务切换,都要使用 iret 返回
CPU 根据32位处理器的状态寄存器 EFLAGS NT 位来区分两种不同的返回类型
如果当前任务 EFLAGS 寄存器的 NT = 1, 表示当前正在执行的任务嵌套在其他任务内,并且能够通过 TSS 任务链接域的指针返回前一个任务
TSS 中有个任务链接域,指向前一个任务的指针,可以填写为前一个任务的 TSS 选择子

可以用 iret 从当前任务返回(转换)到前一个任务,前提是 EFLAGS 的 NT 位 = 1

除了因中断引发的任务切换外,还可以用远过程调用指令 call, 或者远跳转指令 jmp 直接发起任务切换

